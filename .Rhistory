hello <- function() {
print("Hello, world!")
}
devtools::load_all(".")
library(TEST)
library(TEST)
TEST::compare_vcfs_GT()
??TEST::compare_vcfs_GT()
library(devtools)
check()
library(roxygen2)
compare_vcfs_GT()
library(TEST)
document()
library(TEST)
compare_vcfs_GT()
??compare_vcfs_GT()
??compare_vcfs_GT()
??compare_vcfs_GT()
library(TEST)
devtools::load_all(".")
??compare_vcfs_GT()
??compare_vcfs_GT()
library(TEST)
library(TEST)
??compare_vcfs_GT()
library(TEST)
??compare_vcfs_GT()
install_github("shankarkshakya/mypackage")
library(mypackage)
install_github("shankarkshakya/mypackage")
require::vcfR
library(vcfR)
vcf <- read.vcfR("vcf")
vcfR_to_012 <- function(vcf){
require::vcfR
vcf <- read.vcfR("vcf")
gt <- extract.gt(vcf, "GT")
gt2a <- apply(gt,2, function(x) gsub("1[/|]1","1",x))
gt2b <- gsub("0[/|]0","0",gt2a)
gt2c <- gsub("[10][/|][10]","0.5",gt2b)
gt <- gt2c
vcf@gt <- gt
return(vcf)
}
library(roxygen2)
devtools::document()
library(TEST)
roxygen2::roxygenise()
roxygenise("TEST")
roxygenise()
library(TEST)
??TEST::vcfR_to_012()
library(TEST)
??vcfR_to_012
#' Convert vcfR to 012 format
#'
#' @param vcf vcf file
#'
#' @return vcf file with new GT format
#' @export
#'
#' @examples
vcfR_to_012 <- function(vcf){
require::vcfR
vcf <- read.vcfR("vcf")
gt <- extract.gt(vcf, "GT")
gt2a <- apply(gt,2, function(x) gsub("1[/|]1","2",x))
gt2b <- gsub("0[/|]0","0",gt2a)
gt2c <- gsub("[10][/|][10]","1",gt2b)
gt <- gt2c
vcf@gt <- gt
return(vcf)
}
library(TEST)
vcfR_to_012("vcf1.test.gz")
#' Convert vcfR to 012 format
#'
#' @param vcf vcf file
#'
#' @return vcf file with new GT format
#' @export
#'
#' @examples
vcfR_to_012 <- function(vcf){
library(vcfR)
vcf <- read.vcfR("vcf")
gt <- extract.gt(vcf, "GT")
gt2a <- apply(gt,2, function(x) gsub("1[/|]1","2",x))
gt2b <- gsub("0[/|]0","0",gt2a)
gt2c <- gsub("[10][/|][10]","1",gt2b)
gt <- gt2c
vcf@gt <- gt
return(vcf)
}
vcfR_to_012("vcf1.test.gz")
#' Convert vcfR to 012 format
#'
#' @param vcf vcf file
#'
#' @return vcf file with new GT format
#' @export
#'
#' @examples
vcfR_to_012 <- function(vcf){
library(vcfR)
vcf <- read.vcfR(vcf)
gt <- extract.gt(vcf, "GT")
gt2a <- apply(gt,2, function(x) gsub("1[/|]1","2",x))
gt2b <- gsub("0[/|]0","0",gt2a)
gt2c <- gsub("[10][/|][10]","1",gt2b)
gt <- gt2c
vcf@gt <- gt
return(vcf)
}
vcfR_to_012("vcf1.test.gz")
vcf@gt
p <- vcfR_to_012("vcf1.test.gz")
p
p@gt
find_unique_GT_per_sample("vcf1.test.gz")
